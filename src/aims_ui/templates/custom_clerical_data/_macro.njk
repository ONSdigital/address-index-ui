{% macro customClericalData(params) %}

{% from "components/collapsible/_macro.njk" import onsCollapsible %}
{% from "components/table/_macro.njk" import onsTable %}

{# By setting the content, the onsTable is contained inside onsCollapsible #}

 {% set content %}
        {{ onsTable({
        "caption": "Clerical Information",
        "id": "clerical-data-table",
        "ths": params.clerical_info.get('ths'),
        "trs": params.clerical_info.get('trs'),
	}) }}

    {% endset %}

    {% call onsCollapsible({
            'id': "collapsible",
            'title': "Show Clerical Information",
            'titleTag': "h2",
            'button': {
                "close": "Hide this",
                "contextSuffix": "content"
            }
        })
    %}
        {{ content | safe }}
    {% endcall %}

<script>

function cleanAndFormat(toClean) {
  clean = toClean.replace(/\s/g, "");
  clean = clean.toLowerCase();
  clean = clean.replace('[paf]','');
  clean = clean.replace('[nag]','');
  return clean;
}

function showToolTip(elm) {
  elm.style = ' cursor: pointer; ';
}

// Add tooltips to the above table
const ttd = {{params.tool_tip_data}};
for (const x of ttd) {
//  console.log(x);
  let i = 9;
}

const table_elms = document.querySelectorAll('.ons-table__cell');

for (const elm of table_elms) {
  let tableCellClean = cleanAndFormat(elm.textContent);

  for (const toolTip of ttd) {
    const toolTipClean = cleanAndFormat(toolTip.name);
    if ( tableCellClean === toolTipClean ) {
      console.log(tableCellClean , ' === ', toolTipClean );
      elm.title = toolTip.description;
      showToolTip(elm);
    } 
  }
}


</script>

{% endmacro %}
